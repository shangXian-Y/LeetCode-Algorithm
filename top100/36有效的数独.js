// 36. 有效的数独
// 请你判断一个 9 x 9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。
// 数字 1 - 9 在每一行只能出现一次。
// 数字 1 - 9 在每一列只能出现一次。
// 数字 1 - 9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。（请参考示例图）
// 注意：
// 一个有效的数独（部分已被填充）不一定是可解的。
// 只需要根据以上规则，验证已经填入的数字是否有效即可。
// 空白格用 '.' 表示。

/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
  if (board[0].length !== board.length || board.length % 3 != 0) {
    return false
  }
  let row = new Array(9).fill(0).map(() => new Array(9).fill(0))
  let col = new Array(9).fill(0).map(() => new Array(9).fill(0))
  let box = new Array(3).fill(0).map(() => new Array(3).fill(0).map(() => new Array(9).fill(0)))

  for (let i = 0; i < 9; i++) {//行
    for (let j = 0; j < 9; j++) {//列
      if (board[i][j] != ".") {
        let index = board[i][j] - 1
        row[i][index]++
        col[j][index]++
        box[Math.floor(i / 3)][Math.floor(j / 3)][index]++

        if (row[i][index] > 1 || col[j][index] > 1 || box[Math.floor(i / 3)][Math.floor(j / 3)][index] > 1) {
          return false
        }
      }
    }
  }
  console.log(box);
  return true
};

let aa = [
  ["5", "3", ".", ".", "7", ".", ".", ".", "."],
  ["6", ".", ".", "1", "9", "5", ".", ".", "."],
  [".", "9", "8", ".", ".", ".", ".", "6", "."],
  ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
  ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
  ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
  [".", "6", ".", ".", ".", ".", "2", "8", "."],
  [".", ".", ".", "4", "1", "9", ".", ".", "5"],
  [".", ".", ".", ".", "8", ".", ".", "7", "9"]
]
let ss = [
  [".", ".", ".", ".", ".", ".", ".", ".", "."],
  [".", ".", ".", ".", ".", ".", ".", ".", "."],
  [".", "9", ".", ".", ".", ".", ".", ".", "1"],
  ["8", ".", ".", ".", ".", ".", ".", ".", "."],
  [".", "9", "9", "3", "5", "7", ".", ".", "."],
  [".", ".", ".", ".", ".", ".", ".", "4", "."],
  [".", ".", ".", "8", ".", ".", ".", ".", "."],
  [".", "1", ".", ".", ".", ".", "4", ".", "9"],
  [".", ".", ".", "5", ".", "4", ".", ".", "."]
]
console.log(isValidSudoku(ss));